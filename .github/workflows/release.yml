name: Go Build and Release

on:
  push:
    branches:
      - main  # 或您选择的分支

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'  # 您的 Go 版本

    - name: Check out code
      uses: actions/checkout@v2

    - name: Build
      run: |
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o myapp main.go

    - name: Get short SHA
      id: short-sha
      run: echo "SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

    - name: Create Release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.SHORT_SHA }}
        release_name: Release ${{ env.SHORT_SHA }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: ./myapp
        asset_name: clash-wsl2-mtu-fix
        asset_content_type: application/octet-stream
